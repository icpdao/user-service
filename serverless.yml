org: icpdao
app: icpdao
service: user-service

disabledDeprecations:
  - CLI_OPTIONS_SCHEMA

useDotenv: true

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  environment:
    API_GATEWAY_BASE_PATH: ${env:API_GATEWAY_BASE_PATH}
    ICPDAO_GITHUB_APP_CLIENT_ID: ${env:ICPDAO_GITHUB_APP_CLIENT_ID}
    ICPDAO_GITHUB_APP_CLIENT_SECRET: ${env:ICPDAO_GITHUB_APP_CLIENT_SECRET}
    ICPDAO_JWT_RSA_PRIVATE_KEY: ${env:ICPDAO_JWT_RSA_PRIVATE_KEY}
    AWS_AUTHORIZER_ARN: ${env:AWS_AUTHORIZER_ARN}
    ICPDAO_AWS_UPLOAD_S3_ROLE_ARN: ${env:ICPDAO_AWS_UPLOAD_S3_ROLE_ARN}
    ICPDAO_AWS_UPLOAD_S3_BUCKET: ${env:ICPDAO_AWS_UPLOAD_S3_BUCKET}
    ICPDAO_AWS_UPLOAD_S3_REGION: ${env:ICPDAO_AWS_UPLOAD_S3_REGION}
    ICPDAO_AWS_UPLOAD_S3_BUCKET_HOST: ${env:ICPDAO_AWS_UPLOAD_S3_BUCKET_HOST}
    ICPDAO_MONGODB_ICPDAO_HOST: ${env:ICPDAO_MONGODB_ICPDAO_HOST}
    ICPDAO_REDIS_LOCK_DB_URL: ${env:ICPDAO_REDIS_LOCK_DB_URL}
    ICPDAO_MINT_TOKEN_ETH_CHAIN_ID: ${env:ICPDAO_MINT_TOKEN_ETH_CHAIN_ID}
    ICPDAO_FRONTEND_URL: ${env:ICPDAO_FRONTEND_URL}
    ICPDAO_DISCORD_BOT_TOKEN: ${env:ICPDAO_DISCORD_BOT_TOKEN}
    ICPDAO_DISCORD_GUILD: ${env:ICPDAO_DISCORD_GUILD}
    ICPDAO_DISCORD_ICPPER_ROLEID: ${env:ICPDAO_DISCORD_ICPPER_ROLEID}
    ICPDAO_DISCORD_NORMAL_ROLEID: ${env:ICPDAO_DISCORD_NORMAL_ROLEID}
    ICPDAO_APP_ENV: ${env:ICPDAO_APP_ENV}
    ICPDAO_SENTRY_DSN: ${env:ICPDAO_SENTRY_DSN}
  region: us-east-1
  stage: ${opt:stage}
  stackName: icpdao-user-servcie-${self:provider.stage}
  apiName: icpdao-user-servcie-${self:provider.stage}
  memorySize: 256
  timeout: 30
  deploymentBucket:
    name: icpdao.9527.${self:provider.region}.deploys
  vpc:
    securityGroupIds:
      - sg-1d9d291e
    subnetIds:
      - subnet-0d6c61be4990b97cd
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sts:AssumeRole
          Resource: ${env:ICPDAO_AWS_UPLOAD_S3_ROLE_ARN}
functions:
  app:
    handler: app.handler
    events:
      - http:
          path: '/openapi.json'
          method: ANY
          cors: true
      - http:
          path: '/docs'
          method: ANY
          cors: true
      - http:
          path: '/redoc'
          method: ANY
          cors: true
      - http:
          path: '/github/auth_callback'
          method: ANY
          cors: true
      - http:
          path: '/app/{proxy+}'
          method: ANY
          cors: true
          authorizer: aws_iam
      - http:
          path: '{proxy+}'
          method: ANY
          cors: true
          authorizer:
            arn: ${env:AWS_AUTHORIZER_ARN}
            managedExternally: false
            resultTtlInSeconds: 3600
            identitySource: method.request.header.Authorization
            type: token

custom:
  pythonRequirements:
    dockerizePip: non-linux
  customDomain:
    domainName: apis.icpdao.co
    stage: ${self:provider.stage}
    basePath: ${env:API_GATEWAY_BASE_PATH}
    endpointType: 'regional'
    apiType: rest
    createRoute53Record: false
    autoDomain: false

plugins:
  - serverless-python-requirements
  - serverless-domain-manager

package:
  patterns:
    - '!node_modules/**'
    - '!package-lock.json'
